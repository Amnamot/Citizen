"""characters

Revision ID: 81a9883776a4
Revises: 
Create Date: 2023-06-08 18:41:02.510211

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '81a9883776a4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), nullable=False),
    sa.Column('seed', sa.VARCHAR(length=320), nullable=False),
    sa.Column('ispassport', sa.Boolean(), nullable=True),
    sa.Column('action_points', sa.Integer(), nullable=True),
    sa.Column('payed', sa.Boolean(), nullable=True),
    sa.Column('isedit', sa.Boolean(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('seed'),
    sa.UniqueConstraint('username')
    )
    op.create_table('attitudes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('yes', sa.Integer(), nullable=False),
    sa.Column('no', sa.Integer(), nullable=False),
    sa.Column('ignore', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('characters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('yes', sa.Integer(), nullable=False),
    sa.Column('no', sa.Integer(), nullable=False),
    sa.Column('ignore', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('emotions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('yes', sa.Integer(), nullable=False),
    sa.Column('no', sa.Integer(), nullable=False),
    sa.Column('ignore', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('moralities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('yes', sa.Integer(), nullable=False),
    sa.Column('no', sa.Integer(), nullable=False),
    sa.Column('ignore', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('yes', sa.Integer(), nullable=False),
    sa.Column('no', sa.Integer(), nullable=False),
    sa.Column('ignore', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('socials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('social_username', sa.VARCHAR(length=50), nullable=False),
    sa.Column('social_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('social_id'),
    sa.UniqueConstraint('social_username')
    )
    op.create_table('vices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('yes', sa.Integer(), nullable=False),
    sa.Column('no', sa.Integer(), nullable=False),
    sa.Column('ignore', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vices')
    op.drop_table('socials')
    op.drop_table('skills')
    op.drop_table('moralities')
    op.drop_table('emotions')
    op.drop_table('characters')
    op.drop_table('attitudes')
    op.drop_table('users')
    # ### end Alembic commands ###
